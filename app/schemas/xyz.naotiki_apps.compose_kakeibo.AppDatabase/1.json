{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "eb5227a806a15b55e5bc4cf2f5510e83",
    "entities": [
      {
        "tableName": "product_item",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `date` INTEGER NOT NULL, `price` INTEGER NOT NULL, `parent_category_id` INTEGER, `memo` TEXT, FOREIGN KEY(`parent_category_id`) REFERENCES `category`(`category_id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "parent_category_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "memo",
            "columnName": "memo",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_product_item_parent_category_id",
            "unique": false,
            "columnNames": [
              "parent_category_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_product_item_parent_category_id` ON `${TABLE_NAME}` (`parent_category_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "category",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "parent_category_id"
            ],
            "referencedColumns": [
              "category_id"
            ]
          }
        ]
      },
      {
        "tableName": "category",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`category_id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `category_name` TEXT NOT NULL, `parentId` INTEGER, `color` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "category_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "category_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "category_id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_category_category_name_parentId",
            "unique": true,
            "columnNames": [
              "category_name",
              "parentId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_category_category_name_parentId` ON `${TABLE_NAME}` (`category_name`, `parentId`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'eb5227a806a15b55e5bc4cf2f5510e83')"
    ]
  }
}